{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/cocktail/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkboxes = _ref => {\n  _s();\n\n  let {\n    ingridients,\n    checkedIngridients\n  } = _ref;\n  const [checkedState, setCheckedState] = useState(new Array(ingridients.length).fill(false));\n\n  const handleOnChange = position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n    setCheckedState(updatedCheckedState);\n  };\n\n  const getCheckList = _ref2 => {\n    let {\n      checkedIngridients\n    } = _ref2;\n\n    for (let i = 0; i < ingridients.length; i++) {\n      if (checkedState[i] === true) {\n        checkedIngridients = checkedIngridients.concat(ingridients[i]);\n      }\n    }\n\n    return checkedIngridients;\n  };\n\n  checkedIngridients = getCheckList();\n  console.log(checkedState, checkedIngridients);\n  console.log(checkedIngridients.map(item => item));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingridients.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `custom-checkbox-${index}`,\n                name: item,\n                value: item,\n                checked: checkedState[index],\n                onChange: () => handleOnChange(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `custom-checkbox-${index}`,\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkboxes, \"lD5tMEqhZXMjPuLoQox6ByPyIUs=\");\n\n_c = Checkboxes;\n\nconst App = () => {\n  const ingridients = ['vodka', 'gin', 'lemon'];\n  let checkedIng;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingridients.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `custom-checkbox-${index}`,\n                name: item,\n                value: item,\n                checked: checkedState[index],\n                onChange: () => handleOnChange(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `custom-checkbox-${index}`,\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Checkboxes\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/cocktail/src/App.js"],"names":["useState","Checkboxes","ingridients","checkedIngridients","checkedState","setCheckedState","Array","length","fill","handleOnChange","position","updatedCheckedState","map","item","index","getCheckList","i","concat","console","log","App","checkedIng"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport { useState } from \"react\";\n\nconst Checkboxes = ({ingridients, checkedIngridients}) => {\n\n  const [checkedState, setCheckedState] = useState(\n    new Array(ingridients.length).fill(false)\n  );\n\n  const handleOnChange = (position) => {\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n    );\n    setCheckedState(updatedCheckedState);\n  }\n\n    const getCheckList = ({checkedIngridients}) => {\n\n      for (let i=0; i<ingridients.length; i++){\n        if (checkedState[i] === true){\n          checkedIngridients = checkedIngridients.concat(ingridients[i])\n          \n        } \n      }\n      return checkedIngridients\n    }\n    checkedIngridients =  getCheckList()\n    \n\n    console.log(checkedState, checkedIngridients)\n    console.log(checkedIngridients.map(item => item))\n  ;\n\n  return (\n    <div>\n      <h3>Select Toppings</h3>\n      <ul>\n        {ingridients.map((item, index) => {\n          return (\n            <li key={index}>\n              <div>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id={`custom-checkbox-${index}`}\n                    name={item}\n                    value={item}\n                    checked={checkedState[index]}\n                    onChange={() => handleOnChange(index)}\n                  />\n                  <label htmlFor={`custom-checkbox-${index}`}>{item}</label>\n                </div>\n                \n              </div>\n            </li>\n          );\n        })}\n\n      </ul>\n    </div>\n  );\n}\n\n\n\n\nconst App = () => {\n\n  const ingridients = ['vodka', 'gin', 'lemon']\n  let checkedIng\n\n  return (\n    <div className=\"App\">\n      <h3>Select Toppings</h3>\n      <ul>\n        {ingridients.map((item, index) => {\n          return (\n            <li key={index}>\n              <div>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id={`custom-checkbox-${index}`}\n                    name={item}\n                    value={item}\n                    checked={checkedState[index]}\n                    onChange={() => handleOnChange(index)}\n                  />\n                  <label htmlFor={`custom-checkbox-${index}`}>{item}</label>\n                </div>\n                \n              </div>\n            </li>\n          );\n        })}\n\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}