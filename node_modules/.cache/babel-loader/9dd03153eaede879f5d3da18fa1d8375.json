{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/cocktail/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFormattedPrice = price => `$${price.toFixed(2)}`;\n\nconst App = () => {\n  _s();\n\n  const ingridients = ['vodka', 'gin', 'lemon'];\n  const [checkedState, setCheckedState] = useState(new Array(ingridients.length).fill(false)); //const [total, setTotal] = useState(0);\n\n  const handleOnChange = position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n    setCheckedState(updatedCheckedState);\n    /*\n    const totalPrice = updatedCheckedState.reduce(\n      (sum, currentState, index) => {\n        if (currentState === true) {\n          return sum + toppings[index].price;\n        }\n        return sum;\n      },\n      0\n    );\n     setTotal(totalPrice); <div className=\"right-section\">{getFormattedPrice(price)}</div>\n    */\n\n    console.log(checkedState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingridients.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `custom-checkbox-${index}`,\n                name: item,\n                value: item,\n                checked: checkedState[index],\n                onChange: () => handleOnChange(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `custom-checkbox-${index}`,\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"lD5tMEqhZXMjPuLoQox6ByPyIUs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/cocktail/src/App.js"],"names":["useState","getFormattedPrice","price","toFixed","App","ingridients","checkedState","setCheckedState","Array","length","fill","handleOnChange","position","updatedCheckedState","map","item","index","console","log"],"mappings":";;;AACA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAIA,MAAMC,iBAAiB,GAAIC,KAAD,IAAY,IAAGA,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB,EAA1D;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,OAAjB,CAApB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAC9C,IAAIQ,KAAJ,CAAUH,WAAW,CAACI,MAAtB,EAA8BC,IAA9B,CAAmC,KAAnC,CAD8C,CAAhD,CAHgB,CAOhB;;AAEA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,UAAMC,mBAAmB,GAAGP,YAAY,CAACQ,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAC3CA,KAAK,KAAKJ,QAAV,GAAqB,CAACG,IAAtB,GAA6BA,IADH,CAA5B;AAIAR,IAAAA,eAAe,CAACM,mBAAD,CAAf;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGII,IAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AAGD,GAvBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGD,WAAW,CAACS,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,4BACE;AAAA,iCACE;AAAA,mCACE;AAAA,sCACE;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,EAAE,EAAG,mBAAkBA,KAAM,EAF/B;AAGE,gBAAA,IAAI,EAAED,IAHR;AAIE,gBAAA,KAAK,EAAEA,IAJT;AAKE,gBAAA,OAAO,EAAET,YAAY,CAACU,KAAD,CALvB;AAME,gBAAA,QAAQ,EAAE,MAAML,cAAc,CAACK,KAAD;AANhC;AAAA;AAAA;AAAA;AAAA,sBADF,eASE;AAAO,gBAAA,OAAO,EAAG,mBAAkBA,KAAM,EAAzC;AAAA,0BAA6CD;AAA7C;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAkBD,OAnBA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA9DD;;GAAMZ,G;;KAAAA,G;AAgEN,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport { useState } from \"react\";\n\n\n\nconst getFormattedPrice = (price) => `$${price.toFixed(2)}`;\n\nconst App = () => {\n\n  const ingridients = ['vodka', 'gin', 'lemon']\n  const [checkedState, setCheckedState] = useState(\n    new Array(ingridients.length).fill(false)\n  );\n\n  //const [total, setTotal] = useState(0);\n\n  const handleOnChange = (position) => {\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setCheckedState(updatedCheckedState);\n    /*\n    const totalPrice = updatedCheckedState.reduce(\n      (sum, currentState, index) => {\n        if (currentState === true) {\n          return sum + toppings[index].price;\n        }\n        return sum;\n      },\n      0\n    );\n\n    setTotal(totalPrice); <div className=\"right-section\">{getFormattedPrice(price)}</div>\n    */\n\n    console.log(checkedState)\n\n    \n  };\n\n  return (\n    <div className=\"App\">\n      <h3>Select Toppings</h3>\n      <ul>\n        {ingridients.map((item, index) => {\n          return (\n            <li key={index}>\n              <div>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id={`custom-checkbox-${index}`}\n                    name={item}\n                    value={item}\n                    checked={checkedState[index]}\n                    onChange={() => handleOnChange(index)}\n                  />\n                  <label htmlFor={`custom-checkbox-${index}`}>{item}</label>\n                </div>\n                \n              </div>\n            </li>\n          );\n        })}\n\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}