{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js\";\nimport '../styles/drink.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowDrinks = _ref => {\n  let {\n    cocktails\n  } = _ref;\n  let drinkNames = [];\n\n  for (let object in cocktails) {\n    drinkNames = drinkNames.concat(cocktails[object].name);\n  }\n\n  const findObejct = name => {\n    for (let object in cocktails) {\n      if (cocktails[object].name === name) {\n        return cocktails[object];\n      }\n    }\n  };\n\n  const openOverlay = (event, cocktail) => {\n    event.preventDefault();\n    console.log('moi');\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drink-grid\",\n    children: drinkNames.map((item, index) => {\n      const cocktail = findObejct(item);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drink-card test\",\n        onClick: event => openOverlay(event, cocktail),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"drink-image\",\n          src: require(`/src/img/cocktails/${item}.jpg`),\n          alt: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drink-gradient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drink-text\",\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ShowDrinks;\n\nconst DrinksWithSelectedIng = _ref2 => {\n  let {\n    cocktails,\n    ingridients,\n    selectedIngridientsByName\n  } = _ref2;\n  let rightDrinks = [];\n\n  for (let i = 0; i < cocktails.length; i++) {\n    let checker = cocktails[i].ingridients.every(ing => selectedIngridientsByName.includes(ing));\n\n    if (checker === true) {\n      rightDrinks = rightDrinks.concat(cocktails[i]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rightDrinks.length > 0 ? /*#__PURE__*/_jsxDEV(ShowDrinks, {\n      cocktails: rightDrinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No drinks founded, please selecet more ingridients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 80\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DrinksWithSelectedIng;\nexport default DrinksWithSelectedIng;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowDrinks\");\n$RefreshReg$(_c2, \"DrinksWithSelectedIng\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js"],"names":["ShowDrinks","cocktails","drinkNames","object","concat","name","findObejct","openOverlay","event","cocktail","preventDefault","console","log","map","item","index","require","DrinksWithSelectedIng","ingridients","selectedIngridientsByName","rightDrinks","i","length","checker","every","ing","includes"],"mappings":";AAAA,OAAO,qBAAP;;;AAEA,MAAMA,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;AAEhC,MAAIC,UAAU,GAAG,EAAjB;;AAEA,OAAK,IAAIC,MAAT,IAAmBF,SAAnB,EAA6B;AACzBC,IAAAA,UAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBH,SAAS,CAACE,MAAD,CAAT,CAAkBE,IAApC,CAAb;AACH;;AAED,QAAMC,UAAU,GAAID,IAAD,IAAU;AACzB,SAAK,IAAIF,MAAT,IAAmBF,SAAnB,EAA6B;AACzB,UAAIA,SAAS,CAACE,MAAD,CAAT,CAAkBE,IAAlB,KAA2BA,IAA/B,EAAoC;AAChC,eAAOJ,SAAS,CAACE,MAAD,CAAhB;AACH;AACJ;AACJ,GAND;;AAQA,QAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrCD,IAAAA,KAAK,CAACE,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA,cACKV,UAAU,CAACW,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,YAAMN,QAAQ,GAAGH,UAAU,CAACQ,IAAD,CAA3B;AACA,0BAEA;AAAkB,QAAA,SAAS,EAAC,iBAA5B;AAA8C,QAAA,OAAO,EAAGN,KAAD,IAAWD,WAAW,CAACC,KAAD,EAAQC,QAAR,CAA7E;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAEO,OAAO,CAAE,sBAAqBF,IAAK,MAA5B,CAAzC;AAA6E,UAAA,GAAG,EAAEA;AAAlF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBACKA;AADL;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,SAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,cAFA;AAaE,KAfL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA3CD;;KAAMf,U;;AA4CN,MAAMiB,qBAAqB,GAAG,SAAyD;AAAA,MAAxD;AAAChB,IAAAA,SAAD;AAAYiB,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,GAAwD;AACnF,MAAIC,WAAW,GAAG,EAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACpB,SAAS,CAACqB,MAA1B,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,OAAO,GAAGtB,SAAS,CAACoB,CAAD,CAAT,CAAaH,WAAb,CAAyBM,KAAzB,CAA+BC,GAAG,IAAEN,yBAAyB,CAACO,QAA1B,CAAmCD,GAAnC,CAApC,CAAd;;AACA,QAAGF,OAAO,KAAK,IAAf,EAAqB;AACnBH,MAAAA,WAAW,GAAGA,WAAW,CAAChB,MAAZ,CAAmBH,SAAS,CAACoB,CAAD,CAA5B,CAAd;AACD;AACF;;AAED,sBACI;AAAA,cACID,WAAW,CAACE,MAAZ,GAAqB,CAArB,gBAAyB,QAAC,UAAD;AAAY,MAAA,SAAS,EAAIF;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAzB,gBAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADvE;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhBD;;MAAMH,qB;AAkBN,eAAeA,qBAAf","sourcesContent":["import '../styles/drink.css'\n\nconst ShowDrinks = ({cocktails}) => {\n\n    let drinkNames = []\n\n    for (let object in cocktails){\n        drinkNames = drinkNames.concat(cocktails[object].name)\n    }\n\n    const findObejct = (name) => {\n        for (let object in cocktails){\n            if (cocktails[object].name === name){\n                return cocktails[object]\n            }\n        }\n    }\n\n    const openOverlay = (event, cocktail) => {\n        event.preventDefault()\n        console.log('moi')\n        return\n    }\n\n    return(\n        <div className = 'drink-grid'>\n            {drinkNames.map((item, index) => {\n                const cocktail = findObejct(item)\n                return(\n        \n                <div key ={index} className=\"drink-card test\" onClick={(event) => openOverlay(event, cocktail)}>\n                    \n                    <img className='drink-image' src={require(`/src/img/cocktails/${item}.jpg`)} alt={item}/>\n                    <span className='drink-gradient'>\n                    </span>\n                    <span className='drink-text'>\n                        {item}\n                    </span>\n                    \n                </div>\n                \n                )}) }\n                \n        </div>\n    )\n}\nconst DrinksWithSelectedIng = ({cocktails, ingridients, selectedIngridientsByName}) => {\n    let rightDrinks = []\n\n    for (let i=0; i<cocktails.length;i++) {\n      let checker = cocktails[i].ingridients.every(ing=>selectedIngridientsByName.includes(ing))\n      if(checker === true) {\n        rightDrinks = rightDrinks.concat(cocktails[i])\n      }\n    }\n\n    return(\n        <div>{\n            rightDrinks.length > 0 ? <ShowDrinks cocktails = {rightDrinks}/> : <div>No drinks founded, please selecet more ingridients</div>}\n            \n        </div>\n    )\n}\n\nexport default DrinksWithSelectedIng"]},"metadata":{},"sourceType":"module"}