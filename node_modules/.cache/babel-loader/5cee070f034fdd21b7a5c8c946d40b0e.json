{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport image from '../img/home.jpg';\nimport '../styles/styles.css';\nimport '../styles/drink.css';\nimport DrinkOverlay from \"../components/DrinkOverlay\";\nimport Checkboxes from \"../components/Checkboxes\";\nimport DrinksWithSelectedIng from \"../components/DrinksWithSelectedIng\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    cocktails,\n    ingridients\n  } = _ref;\n  let sublist = [];\n\n  for (const key in ingridients) {\n    const ingridientsByType = ingridients[key];\n\n    for (const key in ingridientsByType) {\n      sublist[ingridientsByType[key].index] = false;\n    }\n  }\n\n  const [selectedIngridients, setSelectedIngridients] = useState(sublist);\n  const [selectedIngridientsByName, setSelectedIngridientsByName] = useState([]); // Function to remove or add ingridients when checkboxes are used\n\n  const changeSelectedIngridient = (index, item) => {\n    const lst = selectedIngridients;\n    lst[index] = !selectedIngridients[index];\n    setSelectedIngridients(lst);\n\n    if (selectedIngridientsByName.includes(item)) {\n      setSelectedIngridientsByName(selectedIngridientsByName.filter(ing => ing !== item));\n    } else {\n      setSelectedIngridientsByName(selectedIngridientsByName.concat(item));\n    }\n  };\n\n  const [overlayShown, setOverlayShown] = useState(false);\n\n  const changeOverlay = (e, cocktail) => {\n    e.preventDefault();\n    setOverlayShown(cocktail);\n  };\n\n  const closeOverlay = e => {\n    e.preventDefault();\n    setOverlayShown(False);\n  };\n\n  console.log(overlayShown);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Checkboxes, {\n      ingridients: ingridients,\n      selectedIngridients: selectedIngridients,\n      changeSelectedIngridient: changeSelectedIngridient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrinksWithSelectedIng, {\n      cocktails: cocktails,\n      selectedIngridientsByName: selectedIngridientsByName,\n      changeOverlay: changeOverlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), overlayShown !== false && /*#__PURE__*/_jsxDEV(DrinkOverlay, {\n      cocktail: overlayShown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"XVpxr4b/q3ICVbWbMs1ssEJ3Tv4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/pages/Home.js"],"names":["useState","useEffect","image","DrinkOverlay","Checkboxes","DrinksWithSelectedIng","Home","cocktails","ingridients","sublist","key","ingridientsByType","index","selectedIngridients","setSelectedIngridients","selectedIngridientsByName","setSelectedIngridientsByName","changeSelectedIngridient","item","lst","includes","filter","ing","concat","overlayShown","setOverlayShown","changeOverlay","e","cocktail","preventDefault","closeOverlay","False","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,sBAAP;AACA,OAAO,qBAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;;;AAIA,MAAMC,IAAI,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA6B;AAEzC,MAAIC,OAAO,GAAG,EAAd;;AACE,OAAK,MAAMC,GAAX,IAAkBF,WAAlB,EAA8B;AAE5B,UAAMG,iBAAiB,GAAGH,WAAW,CAACE,GAAD,CAArC;;AACA,SAAK,MAAMA,GAAX,IAAkBC,iBAAlB,EAAoC;AAClCF,MAAAA,OAAO,CAACE,iBAAiB,CAACD,GAAD,CAAjB,CAAuBE,KAAxB,CAAP,GAAwC,KAAxC;AACD;AACF;;AAEH,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDd,QAAQ,CAACS,OAAD,CAA9D;AACA,QAAM,CAACM,yBAAD,EAA4BC,4BAA5B,IAA4DhB,QAAQ,CAAC,EAAD,CAA1E,CAZyC,CAczC;;AACA,QAAMiB,wBAAwB,GAAG,CAACL,KAAD,EAAQM,IAAR,KAAiB;AAChD,UAAMC,GAAG,GAAGN,mBAAZ;AACAM,IAAAA,GAAG,CAACP,KAAD,CAAH,GAAa,CAACC,mBAAmB,CAACD,KAAD,CAAjC;AACAE,IAAAA,sBAAsB,CAACK,GAAD,CAAtB;;AACA,QAAIJ,yBAAyB,CAACK,QAA1B,CAAmCF,IAAnC,CAAJ,EAA6C;AAC3CF,MAAAA,4BAA4B,CAACD,yBAAyB,CAACM,MAA1B,CAAiCC,GAAG,IAAIA,GAAG,KAAKJ,IAAhD,CAAD,CAA5B;AACD,KAFD,MAGI;AACFF,MAAAA,4BAA4B,CAACD,yBAAyB,CAACQ,MAA1B,CAAiCL,IAAjC,CAAD,CAA5B;AACD;AACF,GAVD;;AAYA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAM0B,aAAa,GAAG,CAACC,CAAD,EAAGC,QAAH,KAAgB;AACpCD,IAAAA,CAAC,CAACE,cAAF;AACAJ,IAAAA,eAAe,CAACG,QAAD,CAAf;AACD,GAHD;;AAKA,QAAME,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACE,cAAF;AACAJ,IAAAA,eAAe,CAACM,KAAD,CAAf;AACD,GAHD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEhB,WAAzB;AAAsC,MAAA,mBAAmB,EAAEK,mBAA3D;AAAgF,MAAA,wBAAwB,EAAII;AAA5G;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,qBAAD;AAAuB,MAAA,SAAS,EAAIV,SAApC;AAA+C,MAAA,yBAAyB,EAAIQ,yBAA5E;AAAuG,MAAA,aAAa,EAAEW;AAAtH;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,YAAY,KAAK,KAAjB,iBAA0B,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,YAH7B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhDD;;GAAMlB,I;;KAAAA,I;AAkDN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport image from '../img/home.jpg'\nimport '../styles/styles.css'\nimport '../styles/drink.css'\nimport DrinkOverlay from \"../components/DrinkOverlay\";\nimport Checkboxes from \"../components/Checkboxes\";\nimport DrinksWithSelectedIng from \"../components/DrinksWithSelectedIng\";\n\n\n\nconst Home = ({cocktails, ingridients}) => {\n\n  let sublist = []\n    for (const key in ingridients){\n\n      const ingridientsByType = ingridients[key]\n      for (const key in ingridientsByType){\n        sublist[ingridientsByType[key].index] = false\n      }\n    }\n\n  const [selectedIngridients, setSelectedIngridients] = useState(sublist)\n  const [selectedIngridientsByName, setSelectedIngridientsByName] = useState([])\n\n  // Function to remove or add ingridients when checkboxes are used\n  const changeSelectedIngridient = (index, item) => {\n    const lst = selectedIngridients\n    lst[index] = !selectedIngridients[index]\n    setSelectedIngridients(lst)\n    if (selectedIngridientsByName.includes(item)){\n      setSelectedIngridientsByName(selectedIngridientsByName.filter(ing => ing !== item))\n    }\n    else{\n      setSelectedIngridientsByName(selectedIngridientsByName.concat(item))\n    }\n  }\n\n  const [overlayShown, setOverlayShown] = useState(false)\n\n  const changeOverlay = (e,cocktail) => {\n    e.preventDefault()\n    setOverlayShown(cocktail) \n  }\n\n  const closeOverlay = (e) => {\n    e.preventDefault()\n    setOverlayShown(False)\n  }\n\n  console.log(overlayShown) \n  return(\n    <div>\n      <Checkboxes ingridients={ingridients} selectedIngridients={selectedIngridients} changeSelectedIngridient = {changeSelectedIngridient}/>\n      <DrinksWithSelectedIng cocktails = {cocktails} selectedIngridientsByName = {selectedIngridientsByName} changeOverlay={changeOverlay}/>\n      {overlayShown !== false && <DrinkOverlay cocktail={overlayShown}/>}\n    </div>\n  \n  )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}