{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/cocktail/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport \"./drink.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkboxes = _ref => {\n  _s();\n\n  let {\n    removeIngridient,\n    addIngridient,\n    ingridients\n  } = _ref;\n  const [checkedState, setCheckedState] = useState(new Array(ingridients.length).fill(false));\n\n  const handleOnChange = position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n    setCheckedState(updatedCheckedState);\n\n    if (updatedCheckedState[position] === true) {\n      addIngridient(ingridients[position]);\n    } else {\n      removeIngridient(ingridients[position]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingridients.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `custom-checkbox-${index}`,\n                name: item,\n                value: item,\n                checked: checkedState[index],\n                onChange: () => handleOnChange(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `custom-checkbox-${index}`,\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkboxes, \"lD5tMEqhZXMjPuLoQox6ByPyIUs=\");\n\n_c = Checkboxes;\n\nconst P = () => {\n  console.log('hmmm');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: \"jeee\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = P;\n\nconst ShowDrinks = _ref2 => {\n  _s2();\n\n  let {\n    drink\n  } = _ref2;\n  const [isActive, setIsActive] = useState(false);\n\n  const handleClick = (event, drink) => {\n    event.preventDefault();\n    setIsActive(!isActive);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"drinkButton\",\n      onClick: e => handleClick(e, drink),\n      children: drink.name\n    }, drink.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(P, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ShowDrinks, \"OFRYOMGmWDzfQ4dzLF00ag1mHo0=\");\n\n_c3 = ShowDrinks;\n\nconst FindDrinks = _ref3 => {\n  let {\n    drinks,\n    ingridients\n  } = _ref3;\n  let rightDrinks = [];\n\n  for (let i = 0; i < drinks.length; i++) {\n    let checker = drinks[i].ingridients.every(ing => ingridients.includes(ing));\n\n    if (checker === true) {\n      rightDrinks = rightDrinks.concat(drinks[i]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rightDrinks.map(drink => /*#__PURE__*/_jsxDEV(ShowDrinks, {\n      drink: drink\n    }, drink.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 32\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = FindDrinks;\n\nconst App = () => {\n  _s3();\n\n  const drinks = [{\n    \"name\": \"Margharita\",\n    \"type\": \"coctail\",\n    \"gatecory\": \"sweet\",\n    \"ingridients\": [\"tequila\", \"triple sec\", \"lime juice\", \"lime\"],\n    \"portions\": [\"1 part\", '1/2 part', '1/2 part', '1 widge'],\n    \"instructons\": \"Chill your glass. Put lots of ice and all of the ingredients into a shaker, then shake hard for about 30 seconds to chill the liquid really well Run a lime wedge around the outside of the rim of your glass before rolling the rim in salt Double strain the mix into the glass\"\n  }, {\n    \"name\": \"Shotti\",\n    \"type\": \"coctail\",\n    \"gatecory\": \"sweet\",\n    \"ingridients\": [\"tequila\"],\n    \"portions\": [\"1 part\"],\n    \"instructons\": \"Chill your glass. Put lots of ice and all of the ingredients into a shaker, then shake hard for about 30 seconds to chill the liquid really well Run a lime wedge around the outside of the rim of your glass before rolling the rim in salt Double strain the mix into the glass\"\n  }];\n  const ingridients = ['tequila', 'lime juice', 'triple sec', 'lime', 'vodka', 'gin', 'lemon', 'wine', 'cider', 'beer', 'ginger'];\n  const [selectedIngridients, setSelectedIngriedients] = useState([]);\n  let checkedIngridients = [];\n\n  const addIngridient = string => {\n    let newList = selectedIngridients.concat(string);\n    setSelectedIngriedients(newList);\n  };\n\n  const removeIngridient = string => {\n    let newList = selectedIngridients.filter(i => i !== string);\n    setSelectedIngriedients(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Checkboxes, {\n      removeIngridient: removeIngridient,\n      addIngridient: addIngridient,\n      ingridients: ingridients,\n      checkedIngridients: checkedIngridients,\n      selectedIngridients: selectedIngridients,\n      setSelectedIngriedients: setSelectedIngriedients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Valitut raaka-aineet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedIngridients.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sopivat juomat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FindDrinks, {\n      ingridients: selectedIngridients,\n      drinks: drinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(App, \"4AjWfq0HfWp5JTf4ymWfM45QTn8=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Checkboxes\");\n$RefreshReg$(_c2, \"P\");\n$RefreshReg$(_c3, \"ShowDrinks\");\n$RefreshReg$(_c4, \"FindDrinks\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/cocktail/src/App.js"],"names":["useState","Checkboxes","removeIngridient","addIngridient","ingridients","checkedState","setCheckedState","Array","length","fill","handleOnChange","position","updatedCheckedState","map","item","index","P","console","log","ShowDrinks","drink","isActive","setIsActive","handleClick","event","preventDefault","e","name","FindDrinks","drinks","rightDrinks","i","checker","every","ing","includes","concat","App","selectedIngridients","setSelectedIngriedients","checkedIngridients","string","newList","filter"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport { useState } from \"react\";\nimport  \"./drink.css\"\n\nconst Checkboxes = ({removeIngridient, addIngridient, ingridients}) => {\n\n  const [checkedState, setCheckedState] = useState(\n    new Array(ingridients.length).fill(false)\n  );\n\n  const handleOnChange = (position) => {\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n    );\n    setCheckedState(updatedCheckedState);\n    if (updatedCheckedState[position] === true) {\n      addIngridient(ingridients[position])\n    }\n    else {\n      removeIngridient(ingridients[position])\n    }\n  }\n\n  return (\n    <div>\n      <h3>Select Toppings</h3>\n      <ul>\n        {ingridients.map((item, index) => {\n          return (\n            <li key={index}>\n              <div>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id={`custom-checkbox-${index}`}\n                    name={item}\n                    value={item}\n                    checked={checkedState[index]}\n                    onChange={() => handleOnChange(index)}\n                  />\n                  <label htmlFor={`custom-checkbox-${index}`}>{item}</label>\n                </div>\n                \n              </div>\n            </li>\n          );\n        })}\n\n      </ul>\n    </div>\n  );\n}\nconst P = () => {\n  console.log('hmmm')\n  return(\n    <div className='overlay'>\n      jeee\n    </div>\n  )\n}\nconst ShowDrinks = ({drink}) => {\n  const [isActive, setIsActive] = useState(false)\n\n  const handleClick = (event, drink) =>{\n    event.preventDefault()\n    setIsActive(!isActive)\n  }\n  return(\n    <div>\n    <button  className = \"drinkButton\" key={drink.name} onClick={(e) => handleClick(e, drink)}>{drink.name}</button>\n    {isActive?<P/>:<p></p>}\n    </div>\n  )\n}\n\nconst FindDrinks = ({drinks, ingridients}) => {\n  let rightDrinks = []\n  for (let i=0; i<drinks.length;i++) {\n    let checker = drinks[i].ingridients.every(ing=>ingridients.includes(ing))\n    if(checker === true) {\n      rightDrinks = rightDrinks.concat(drinks[i])\n    }\n  }\n\n  return(\n    <div>\n      {rightDrinks.map(drink=> <ShowDrinks key = {drink.name} drink = {drink}/>)}\n    </div>\n  )\n  \n}\n\n\nconst App = () => {\n  const drinks = [\n    {\n      \"name\": \"Margharita\",\n      \"type\": \"coctail\",\n      \"gatecory\": \"sweet\",\n      \"ingridients\": [\"tequila\", \"triple sec\",  \"lime juice\", \"lime\"],\n      \"portions\": [\"1 part\", '1/2 part', '1/2 part', '1 widge'],\n      \"instructons\": \"Chill your glass. Put lots of ice and all of the ingredients into a shaker, then shake hard for about 30 seconds to chill the liquid really well Run a lime wedge around the outside of the rim of your glass before rolling the rim in salt Double strain the mix into the glass\",\n    },\n    {\n      \"name\": \"Shotti\",\n      \"type\": \"coctail\",\n      \"gatecory\": \"sweet\",\n      \"ingridients\": [\"tequila\"],\n      \"portions\": [\"1 part\"],\n      \"instructons\": \"Chill your glass. Put lots of ice and all of the ingredients into a shaker, then shake hard for about 30 seconds to chill the liquid really well Run a lime wedge around the outside of the rim of your glass before rolling the rim in salt Double strain the mix into the glass\",\n    }\n  ]\n  const ingridients = ['tequila', 'lime juice', 'triple sec', 'lime', 'vodka', 'gin', 'lemon', 'wine', 'cider', 'beer', 'ginger']\n  const [selectedIngridients, setSelectedIngriedients] = useState([]) \n  let checkedIngridients = []\n\n  const addIngridient = (string) => {\n    let newList = selectedIngridients.concat(string)\n    setSelectedIngriedients(newList)\n  }\n\n  const removeIngridient = (string) => {\n    let newList = selectedIngridients.filter(i=> i!==string)\n    setSelectedIngriedients(newList)\n  }\n\n  return (\n    <div>\n      <Checkboxes removeIngridient={removeIngridient} addIngridient = {addIngridient} ingridients={ingridients} checkedIngridients={checkedIngridients} selectedIngridients= {selectedIngridients} setSelectedIngriedients={setSelectedIngriedients}/>\n      <h2>Valitut raaka-aineet</h2>\n      <ul>{selectedIngridients.map((item, index)=><li key = {index}>{item}</li>)}</ul>\n      <h2>Sopivat juomat</h2>\n      <FindDrinks ingridients={selectedIngridients} drinks={drinks}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}