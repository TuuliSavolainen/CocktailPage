{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/drink.css';\nimport { useState } from 'react';\nimport DrinkOverlay from './DrinkOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowDrinks = _ref => {\n  _s();\n\n  let {\n    cocktails\n  } = _ref;\n  const [overlayShown, setOverlayShown] = useState(false);\n  let drinkNames = [];\n\n  for (let object in cocktails) {\n    drinkNames = drinkNames.concat(cocktails[object].name);\n  }\n\n  const findObejct = name => {\n    for (let object in cocktails) {\n      if (cocktails[object].name === name) {\n        return cocktails[object];\n      }\n    }\n  };\n\n  const changeOverlay = (e, cocktail) => {\n    e.preventDefault();\n    setOverlayShown(cocktail);\n  };\n\n  console.log(overlayShown);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drink-grid\",\n      children: drinkNames.map((item, index) => {\n        const cocktail = findObejct(item);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drink-card test\",\n          onClick: e => changeOverlay(e, cocktail),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"drink-image\",\n            src: require(`/src/img/cocktails/${item}.jpg`),\n            alt: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"drink-gradient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"drink-text\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: overlayShown !== false && /*#__PURE__*/_jsxDEV(DrinkOverlay, {\n        cocktail: cocktail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShowDrinks, \"2GUp1Q2dkV4Ggo7n6tmpDu/99Xk=\");\n\n_c = ShowDrinks;\n\nconst DrinksWithSelectedIng = _ref2 => {\n  let {\n    cocktails,\n    ingridients,\n    selectedIngridientsByName\n  } = _ref2;\n  let rightDrinks = [];\n\n  for (let i = 0; i < cocktails.length; i++) {\n    let checker = cocktails[i].ingridients.every(ing => selectedIngridientsByName.includes(ing));\n\n    if (checker === true) {\n      rightDrinks = rightDrinks.concat(cocktails[i]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rightDrinks.length > 0 ? /*#__PURE__*/_jsxDEV(ShowDrinks, {\n      cocktails: rightDrinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"selection-text\",\n      children: \"No drinks founded, please selecet more ingridients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 80\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DrinksWithSelectedIng;\nexport default DrinksWithSelectedIng;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowDrinks\");\n$RefreshReg$(_c2, \"DrinksWithSelectedIng\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js"],"names":["useState","DrinkOverlay","ShowDrinks","cocktails","overlayShown","setOverlayShown","drinkNames","object","concat","name","findObejct","changeOverlay","e","cocktail","preventDefault","console","log","map","item","index","require","DrinksWithSelectedIng","ingridients","selectedIngridientsByName","rightDrinks","i","length","checker","every","ing","includes"],"mappings":"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","sourcesContent":["import '../styles/drink.css'\nimport { useState } from 'react'\nimport DrinkOverlay from './DrinkOverlay'\n\n\n\nconst ShowDrinks = ({cocktails}) => {\n\n    const [overlayShown, setOverlayShown] = useState(false)\n\n    let drinkNames = []\n\n    for (let object in cocktails){\n        drinkNames = drinkNames.concat(cocktails[object].name)\n    }\n\n    const findObejct = (name) => {\n        for (let object in cocktails){\n            if (cocktails[object].name === name){\n                return cocktails[object]\n            }\n        }\n    }\n\n    const changeOverlay = (e,cocktail) => {\n        e.preventDefault()\n        setOverlayShown(cocktail) \n\n    }\n    console.log(overlayShown)\n\n    return(\n        <div>\n            <div className = 'drink-grid'>\n                {drinkNames.map((item, index) => {\n                    const cocktail = findObejct(item)\n                    return(\n            \n                    <div key ={index} className=\"drink-card test\" onClick={(e)=>changeOverlay(e, cocktail)}>\n                        \n                        <img className='drink-image' src={require(`/src/img/cocktails/${item}.jpg`)} alt={item}/>\n                        <span className='drink-gradient'>\n                        </span>\n                        <span className='drink-text'>\n                            {item}\n                        </span>\n                        \n                    </div>\n                    \n                    )}) }\n            </div>\n            <div>\n            {overlayShown !== false && <DrinkOverlay cocktail={cocktail}/>}\n            </div>\n        </div>\n    )\n}\n\n\nconst DrinksWithSelectedIng = ({cocktails, ingridients, selectedIngridientsByName}) => {\n    let rightDrinks = []\n\n    for (let i=0; i<cocktails.length;i++) {\n      let checker = cocktails[i].ingridients.every(ing=>selectedIngridientsByName.includes(ing))\n      if(checker === true) {\n        rightDrinks = rightDrinks.concat(cocktails[i])\n      }\n    }\n\n    return(\n        <div>{\n            rightDrinks.length > 0 ? <ShowDrinks cocktails = {rightDrinks}/> : <span className='selection-text'>No drinks founded, please selecet more ingridients</span>}\n            \n        </div>\n    )\n}\n\nexport default DrinksWithSelectedIng"]},"metadata":{},"sourceType":"module"}