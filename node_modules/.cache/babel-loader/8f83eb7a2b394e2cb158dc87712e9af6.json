{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FindDrinks = _ref => {\n  let {\n    drinks,\n    ingridients\n  } = _ref;\n  const checkLists = drink;\n  let rightDrinks = [];\n  console.log(drinks[1].ingridients);\n\n  for (let i = 0; i < drinks.length; i++) {\n    console.log(drinks[i].ingridients, ingridients);\n    let checker = drinks[i].ingridients.every(checkLists);\n\n    if (checker === true) {\n      rightDrinks = rightDrinks.concat(drinks[i]);\n    }\n  }\n\n  console.log(rightDrinks); //{rightDrinks.map(drink=> <ShowDrinks key = {drink.name} drink = {drink}/>)}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n\n_c = FindDrinks;\n\nconst DrinksWithSelectedIng = _ref2 => {\n  let {\n    cocktails,\n    ingridients,\n    selectedIngridientsByName\n  } = _ref2;\n  console.log('drinkusio');\n  /*const ingridients = selectedIngridients\n  const findDrinks = () => {\n      for (let i=0; i<cocktails.length;i++) {\n          let checker = cocktails[i].ingridients.every(ing=>ingridients.includes(ing))\n          if(checker === true) {\n            drinkList = drinkList.concat(cocktails[i])\n          }\n        }\n  }\n  */\n  //findDrinks()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedIngridientsByName.length > 0 ? /*#__PURE__*/_jsxDEV(FindDrinks, {\n      drinks: cocktails,\n      ingridients: selectedIngridientsByName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 54\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Eiii\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 131\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DrinksWithSelectedIng;\nexport default DrinksWithSelectedIng;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FindDrinks\");\n$RefreshReg$(_c2, \"DrinksWithSelectedIng\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js"],"names":["FindDrinks","drinks","ingridients","checkLists","drink","rightDrinks","console","log","i","length","checker","every","concat","DrinksWithSelectedIng","cocktails","selectedIngridientsByName"],"mappings":";;;AAAA,MAAMA,UAAU,GAAG,QAA2B;AAAA,MAA1B;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAA0B;AAE1C,QAAMC,UAAU,GAAIC,KAApB;AAEA,MAAIC,WAAW,GAAG,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAAC,CAAD,CAAN,CAAUC,WAAtB;;AACA,OAAK,IAAIM,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACP,MAAM,CAACQ,MAAvB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/BF,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,CAAD,CAAN,CAAUN,WAAtB,EAAmCA,WAAnC;AACF,QAAIQ,OAAO,GAAGT,MAAM,CAACO,CAAD,CAAN,CAAUN,WAAV,CAAsBS,KAAtB,CAA4BR,UAA5B,CAAd;;AACA,QAAGO,OAAO,KAAK,IAAf,EAAqB;AACnBL,MAAAA,WAAW,GAAGA,WAAW,CAACO,MAAZ,CAAmBX,MAAM,CAACO,CAAD,CAAzB,CAAd;AACD;AACF;;AACDF,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ,EAb0C,CAc5C;;AAEE,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArBH;;KAAML,U;;AAuBN,MAAMa,qBAAqB,GAAG,SAAyD;AAAA,MAAxD;AAACC,IAAAA,SAAD;AAAYZ,IAAAA,WAAZ;AAAyBa,IAAAA;AAAzB,GAAwD;AAEnFT,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;;AAEA,sBACI;AAAA,cAAMQ,yBAAyB,CAACN,MAA1B,GAAmC,CAAnC,gBAAuC,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEK,SAApB;AAA+B,MAAA,WAAW,EAAIC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAAvC,gBAAoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1H;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;MAAMF,qB;AA0BN,eAAeA,qBAAf","sourcesContent":["const FindDrinks = ({drinks, ingridients}) => {\n\n    const checkLists = (drink)\n\n    let rightDrinks = []\n    console.log(drinks[1].ingridients)\n    for (let i=0; i<drinks.length;i++) {\n        console.log(drinks[i].ingridients, ingridients)\n      let checker = drinks[i].ingridients.every(checkLists)\n      if(checker === true) {\n        rightDrinks = rightDrinks.concat(drinks[i])\n      }\n    }\n    console.log(rightDrinks)\n  //{rightDrinks.map(drink=> <ShowDrinks key = {drink.name} drink = {drink}/>)}\n\n    return(\n      < div>\n        </div>\n        \n    )\n  }\n\nconst DrinksWithSelectedIng = ({cocktails, ingridients, selectedIngridientsByName}) => {\n\n    console.log('drinkusio')\n\n\n        \n    /*const ingridients = selectedIngridients\n    const findDrinks = () => {\n        for (let i=0; i<cocktails.length;i++) {\n            let checker = cocktails[i].ingridients.every(ing=>ingridients.includes(ing))\n            if(checker === true) {\n              drinkList = drinkList.concat(cocktails[i])\n            }\n          }\n    }\n    */\n\n    //findDrinks()\n\n    return(\n        <div>{selectedIngridientsByName.length > 0 ? <FindDrinks drinks={cocktails} ingridients = {selectedIngridientsByName}/> : <div>Eiii</div>}\n            \n        </div>\n    )\n}\n\nexport default DrinksWithSelectedIng"]},"metadata":{},"sourceType":"module"}