{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FindDrinks = _ref => {\n  let {\n    drinks,\n    ingridients\n  } = _ref;\n  let rightDrinks = [];\n\n  for (let i = 0; i < drinks.length; i++) {\n    let checker = drinks[i].ingridients.every(ing => ingridients.includes(ing));\n\n    if (checker === true) {\n      rightDrinks = rightDrinks.concat(drinks[i]);\n    }\n  } //{rightDrinks.map(drink=> <ShowDrinks key = {drink.name} drink = {drink}/>)}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\n_c = FindDrinks;\n\nconst DrinksWithSelectedIng = _ref2 => {\n  let {\n    cocktails,\n    ingridients,\n    selectedIngridients\n  } = _ref2;\n  let drinkList = [];\n\n  const findDrinks = () => {\n    Object.keys(ingridients).map((type, index) => {\n      console.log(type, ingridients[type]);\n      let lst = ingridients[type];\n\n      for (let i in lst) {\n        console.log(lst[i].index);\n\n        if (selectedIngridients[lst[i].index] === true) {\n          console.log('jiihaa');\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: drinkList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  /*const ingridients = selectedIngridients\n  const findDrinks = () => {\n      for (let i=0; i<cocktails.length;i++) {\n          let checker = cocktails[i].ingridients.every(ing=>ingridients.includes(ing))\n          if(checker === true) {\n            drinkList = drinkList.concat(cocktails[i])\n          }\n        }\n  }\n  */\n  //findDrinks()\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: drinkList.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 30\n    }, this))\n  }, void 0, false);\n};\n\n_c2 = DrinksWithSelectedIng;\nexport default DrinksWithSelectedIng;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FindDrinks\");\n$RefreshReg$(_c2, \"DrinksWithSelectedIng\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js"],"names":["FindDrinks","drinks","ingridients","rightDrinks","i","length","checker","every","ing","includes","concat","DrinksWithSelectedIng","cocktails","selectedIngridients","drinkList","findDrinks","Object","keys","map","type","index","console","log","lst","item"],"mappings":";;;;AAAA,MAAMA,UAAU,GAAG,QAA2B;AAAA,MAA1B;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAA0B;AAC1C,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,MAAM,CAACI,MAAvB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,QAAIE,OAAO,GAAGL,MAAM,CAACG,CAAD,CAAN,CAAUF,WAAV,CAAsBK,KAAtB,CAA4BC,GAAG,IAAEN,WAAW,CAACO,QAAZ,CAAqBD,GAArB,CAAjC,CAAd;;AACA,QAAGF,OAAO,KAAK,IAAf,EAAqB;AACnBH,MAAAA,WAAW,GAAGA,WAAW,CAACO,MAAZ,CAAmBT,MAAM,CAACG,CAAD,CAAzB,CAAd;AACD;AACF,GAPyC,CAQ5C;;;AAEE,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfH;;KAAMJ,U;;AAiBN,MAAMW,qBAAqB,GAAG,SAAmD;AAAA,MAAlD;AAACC,IAAAA,SAAD;AAAYV,IAAAA,WAAZ;AAAyBW,IAAAA;AAAzB,GAAkD;AAC7E,MAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrBC,IAAAA,MAAM,CAACC,IAAP,CAAYf,WAAZ,EAAyBgB,GAAzB,CAA6B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBjB,WAAW,CAACiB,IAAD,CAA7B;AACA,UAAII,GAAG,GAAGrB,WAAW,CAACiB,IAAD,CAArB;;AACA,WAAK,IAAIf,CAAT,IAAcmB,GAAd,EAAkB;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACnB,CAAD,CAAH,CAAOgB,KAAnB;;AACA,YAAIP,mBAAmB,CAACU,GAAG,CAACnB,CAAD,CAAH,CAAOgB,KAAR,CAAnB,KAAsC,IAA1C,EAA+C;AAC3CC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ;;AACD,0BACI;AAAA,kBACKR;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAdD;AAkBH,GAnBD;AAsBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;;;AAEA,sBACI;AAAA,cACCA,SAAS,CAACI,GAAV,CAAcM,IAAI,iBAAE;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAApB;AADD,mBADJ;AAMH,CA5CD;;MAAMb,qB;AA8CN,eAAeA,qBAAf","sourcesContent":["const FindDrinks = ({drinks, ingridients}) => {\n    let rightDrinks = []\n    for (let i=0; i<drinks.length;i++) {\n      let checker = drinks[i].ingridients.every(ing=>ingridients.includes(ing))\n      if(checker === true) {\n        rightDrinks = rightDrinks.concat(drinks[i])\n      }\n    }\n  //{rightDrinks.map(drink=> <ShowDrinks key = {drink.name} drink = {drink}/>)}\n\n    return(\n      < div>\n        </div>\n        \n    )\n  }\n\nconst DrinksWithSelectedIng = ({cocktails, ingridients, selectedIngridients}) => {\n    let drinkList = []\n\n    const findDrinks = () => {\n        Object.keys(ingridients).map((type, index) => {\n            console.log(type, ingridients[type])\n            let lst = ingridients[type]\n            for (let i in lst){\n                console.log(lst[i].index)\n                if (selectedIngridients[lst[i].index] === true){\n                    console.log('jiihaa')\n                }\n            }\n            return(\n                <div>\n                    {drinkList}\n                </div>\n            )\n        })\n\n        \n\n    }\n\n    \n    /*const ingridients = selectedIngridients\n    const findDrinks = () => {\n        for (let i=0; i<cocktails.length;i++) {\n            let checker = cocktails[i].ingridients.every(ing=>ingridients.includes(ing))\n            if(checker === true) {\n              drinkList = drinkList.concat(cocktails[i])\n            }\n          }\n    }\n    */\n\n    //findDrinks()\n\n    return(\n        <>\n        {drinkList.map(item=><p>{item}</p>)}\n        {}\n        </>\n    )\n}\n\nexport default DrinksWithSelectedIng"]},"metadata":{},"sourceType":"module"}