{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js\";\nimport '../styles/drink.css';\nimport { useState } from 'react';\nimport DrinkOverlay from './DrinkOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowDrinks = _ref => {\n  let {\n    cocktails,\n    setOverlayShown\n  } = _ref;\n  let drinkNames = [];\n\n  for (let object in cocktails) {\n    drinkNames = drinkNames.concat(cocktails[object].name);\n  }\n\n  const findObejct = name => {\n    for (let object in cocktails) {\n      if (cocktails[object].name === name) {\n        return cocktails[object];\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drink-grid\",\n      children: drinkNames.map((item, index) => {\n        const cocktail = findObejct(item);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drink-card test\",\n          onClick: setOverlayShown(cocktail),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"drink-image\",\n            src: require(`/src/img/cocktails/${item}.jpg`),\n            alt: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"drink-gradient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"drink-text\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: overlayShown !== false && /*#__PURE__*/_jsxDEV(DrinkOverlay, {\n        cocktail: overlayShown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ShowDrinks;\n\nconst DrinksWithSelectedIng = _ref2 => {\n  let {\n    cocktails,\n    ingridients,\n    selectedIngridientsByName\n  } = _ref2;\n  let rightDrinks = [];\n\n  for (let i = 0; i < cocktails.length; i++) {\n    let checker = cocktails[i].ingridients.every(ing => selectedIngridientsByName.includes(ing));\n\n    if (checker === true) {\n      rightDrinks = rightDrinks.concat(cocktails[i]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rightDrinks.length > 0 ? /*#__PURE__*/_jsxDEV(ShowDrinks, {\n      cocktails: rightDrinks,\n      setOverlayShown: setOverlayShown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"selection-text\",\n      children: \"No drinks founded, please selecet more ingridients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 114\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DrinksWithSelectedIng;\nexport default DrinksWithSelectedIng;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowDrinks\");\n$RefreshReg$(_c2, \"DrinksWithSelectedIng\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js"],"names":["useState","DrinkOverlay","ShowDrinks","cocktails","setOverlayShown","drinkNames","object","concat","name","findObejct","map","item","index","cocktail","require","overlayShown","DrinksWithSelectedIng","ingridients","selectedIngridientsByName","rightDrinks","i","length","checker","every","ing","includes"],"mappings":"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","sourcesContent":["import '../styles/drink.css'\nimport { useState } from 'react'\nimport DrinkOverlay from './DrinkOverlay'\n\n\nconst ShowDrinks = ({cocktails, setOverlayShown}) => {\n\n\n    let drinkNames = []\n\n    for (let object in cocktails){\n        drinkNames = drinkNames.concat(cocktails[object].name)\n    }\n\n    const findObejct = (name) => {\n        for (let object in cocktails){\n            if (cocktails[object].name === name){\n                return cocktails[object]\n            }\n        }\n    }\n\n\n\n    return(\n        <div>\n            <div className = 'drink-grid'>\n                {drinkNames.map((item, index) => {\n                    const cocktail = findObejct(item)\n                    return(\n            \n                    <div key ={index} className=\"drink-card test\" onClick={setOverlayShown(cocktail) }>\n                        \n                        <img className='drink-image' src={require(`/src/img/cocktails/${item}.jpg`)} alt={item}/>\n                        <span className='drink-gradient'>\n                        </span>\n                        <span className='drink-text'>\n                            {item}\n                        </span>\n                        \n                    </div>\n                    \n                    )}) }\n            </div>\n            <div>\n            {overlayShown !== false && <DrinkOverlay cocktail={overlayShown}/>}\n            </div>\n        </div>\n    )\n}\n\n\nconst DrinksWithSelectedIng = ({cocktails, ingridients, selectedIngridientsByName}) => {\n    let rightDrinks = []\n\n    for (let i=0; i<cocktails.length;i++) {\n      let checker = cocktails[i].ingridients.every(ing=>selectedIngridientsByName.includes(ing))\n      if(checker === true) {\n        rightDrinks = rightDrinks.concat(cocktails[i])\n      }\n    }\n\n    return(\n        <div>{\n            rightDrinks.length > 0 ? <ShowDrinks cocktails = {rightDrinks} setOverlayShown={setOverlayShown}/> : <span className='selection-text'>No drinks founded, please selecet more ingridients</span>}\n            \n        </div>\n    )\n}\n\nexport default DrinksWithSelectedIng"]},"metadata":{},"sourceType":"module"}