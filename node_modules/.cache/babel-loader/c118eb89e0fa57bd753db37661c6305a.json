{"ast":null,"code":"var _jsxFileName = \"/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FindDrinks = _ref => {\n  let {\n    drinks,\n    ingridients\n  } = _ref;\n  console.log(rightDrinks); //{rightDrinks.map(drink=> <ShowDrinks key = {drink.name} drink = {drink}/>)}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n};\n\n_c = FindDrinks;\n\nconst DrinksWithSelectedIng = _ref2 => {\n  let {\n    cocktails,\n    ingridients,\n    selectedIngridientsByName\n  } = _ref2;\n  let rightDrinks = [];\n\n  for (let i = 0; i < co.length; i++) {\n    console.log(drinks[i].ingridients, ingridients);\n    let checker = drinks[i].ingridients.every(ing => ingridients.includes(ing));\n\n    if (checker === true) {\n      rightDrinks = rightDrinks.concat(drinks[i]);\n    }\n  }\n\n  console.log('drinkusio');\n  /*const ingridients = selectedIngridients\n  const findDrinks = () => {\n      for (let i=0; i<cocktails.length;i++) {\n          let checker = cocktails[i].ingridients.every(ing=>ingridients.includes(ing))\n          if(checker === true) {\n            drinkList = drinkList.concat(cocktails[i])\n          }\n        }\n  }\n  */\n  //findDrinks()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedIngridientsByName.length > 0 ? /*#__PURE__*/_jsxDEV(FindDrinks, {\n      drinks: cocktails,\n      ingridients: selectedIngridientsByName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 54\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Eiii\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 131\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = DrinksWithSelectedIng;\nexport default DrinksWithSelectedIng;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FindDrinks\");\n$RefreshReg$(_c2, \"DrinksWithSelectedIng\");","map":{"version":3,"sources":["/Users/tuulisavolainen/Documents/Cocktail/CocktailPage/src/components/DrinksWithSelectedIng.js"],"names":["FindDrinks","drinks","ingridients","console","log","rightDrinks","DrinksWithSelectedIng","cocktails","selectedIngridientsByName","i","co","length","checker","every","ing","includes","concat"],"mappings":";;;AAAA,MAAMA,UAAU,GAAG,QAA2B;AAAA,MAA1B;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAA0B;AAE1CC,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ,EAF0C,CAG5C;;AAEE,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVH;;KAAML,U;;AAYN,MAAMM,qBAAqB,GAAG,SAAyD;AAAA,MAAxD;AAACC,IAAAA,SAAD;AAAYL,IAAAA,WAAZ;AAAyBM,IAAAA;AAAzB,GAAwD;AACnF,MAAIH,WAAW,GAAG,EAAlB;;AAEA,OAAK,IAAII,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACC,EAAE,CAACC,MAAnB,EAA0BF,CAAC,EAA3B,EAA+B;AAC3BN,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACQ,CAAD,CAAN,CAAUP,WAAtB,EAAmCA,WAAnC;AACF,QAAIU,OAAO,GAAGX,MAAM,CAACQ,CAAD,CAAN,CAAUP,WAAV,CAAsBW,KAAtB,CAA4BC,GAAG,IAAEZ,WAAW,CAACa,QAAZ,CAAqBD,GAArB,CAAjC,CAAd;;AACA,QAAGF,OAAO,KAAK,IAAf,EAAqB;AACnBP,MAAAA,WAAW,GAAGA,WAAW,CAACW,MAAZ,CAAmBf,MAAM,CAACQ,CAAD,CAAzB,CAAd;AAED;AACF;;AACDN,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;;AAEA,sBACI;AAAA,cAAMI,yBAAyB,CAACG,MAA1B,GAAmC,CAAnC,gBAAuC,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEJ,SAApB;AAA+B,MAAA,WAAW,EAAIC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAAvC,gBAAoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1H;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjCD;;MAAMF,qB;AAmCN,eAAeA,qBAAf","sourcesContent":["const FindDrinks = ({drinks, ingridients}) => {\n\n    console.log(rightDrinks)\n  //{rightDrinks.map(drink=> <ShowDrinks key = {drink.name} drink = {drink}/>)}\n\n    return(\n      < div>\n        </div>\n        \n    )\n  }\n\nconst DrinksWithSelectedIng = ({cocktails, ingridients, selectedIngridientsByName}) => {\n    let rightDrinks = []\n\n    for (let i=0; i<co.length;i++) {\n        console.log(drinks[i].ingridients, ingridients)\n      let checker = drinks[i].ingridients.every(ing=>ingridients.includes(ing))\n      if(checker === true) {\n        rightDrinks = rightDrinks.concat(drinks[i])\n\n      }\n    }\n    console.log('drinkusio')\n\n\n        \n    /*const ingridients = selectedIngridients\n    const findDrinks = () => {\n        for (let i=0; i<cocktails.length;i++) {\n            let checker = cocktails[i].ingridients.every(ing=>ingridients.includes(ing))\n            if(checker === true) {\n              drinkList = drinkList.concat(cocktails[i])\n            }\n          }\n    }\n    */\n\n    //findDrinks()\n\n    return(\n        <div>{selectedIngridientsByName.length > 0 ? <FindDrinks drinks={cocktails} ingridients = {selectedIngridientsByName}/> : <div>Eiii</div>}\n            \n        </div>\n    )\n}\n\nexport default DrinksWithSelectedIng"]},"metadata":{},"sourceType":"module"}